name: pipeline

on:
  push:

concurrency:
  group: ${{ github.workflow }}-${{ github.ref }}
  cancel-in-progress: true

jobs:
  set-vars:
    runs-on: ubuntu-latest
    outputs:
      python-version: '3.9'
      main-branch: 'master'
      environment: 'deployment'
      deploy-url: 'https://pypi.org/project/krait'
      deploy-repo: 'pypi'
    steps:
      - name: Set needed elements as outputs
        run: echo "setting up needed elements"

  test-ubuntu:
    uses: ./.github/workflows/test.yaml
    with:
      operating_system: ubuntu-latest

  test-macos:
    uses: ./.github/workflows/test.yaml
    with:
      operating_system: macos-latest

  test-windows:
    uses: ./.github/workflows/test.yaml
    with:
      operating_system: windows-latest


  version-check:
    needs:
      - test-ubuntu
      - test-macos
      - test-windows
      - set-vars
    uses: ./.github/workflows/version-check.yaml
    if: github.ref_name == needs.set-vars.outputs.main-branch
    with:
      python-version: ${{ needs.set-vars.outputs.python-version }}

  build-container:
    needs:
      - test-ubuntu
      - set-vars
    uses: ./.github/workflows/build-docker.yaml
    with:
      python-version: ${{ needs.set-vars.outputs.python-version }}

  code-analysis:
    needs: test-ubuntu
    uses: ./.github/workflows/codeql-analysis.yml

  build-package:
    needs:
      - version-check
      - set-vars
      - code-analysis
      - build-container
    uses: ./.github/workflows/build-package.yaml
    with:
      python-version: ${{ needs.set-vars.outputs.python-version }}
      main-branch: ${{ needs.set-vars.outputs.main-branch }}

  build-changelog:
    needs:
      - version-check
      - build-container
      - set-vars
    if: needs.version-check.outputs.run-deploy == 'yes'
    uses: ./.github/workflows/build-changelog.yaml
    with:
      python-version: ${{ needs.set-vars.outputs.python-version }}

  release-github:
    needs:
      - set-vars
      - build-changelog
      - build-package
    uses: ./.github/workflows/release-github.yaml

  release-pypi:
    needs:
      - set-vars
      - build-package
    uses: ./.github/workflows/release-pypi.yaml
    with:
      python-version: ${{ needs.set-vars.outputs.python-version }}
      deploy-env: ${{ needs.set-vars.outputs.environment }}
      deploy-url: "${{ needs.set-vars.outputs.deploy-url }}${{ needs.build-package.outputs.package-version }}/"
      deploy-repo: ${{ needs.set-vars.outputs.deploy-repo }}
    secrets:
      TWINE_USERNAME: ${{ secrets.TWINE_USERNAME }}
      TWINE_PASSWORD: ${{ secrets.TWINE_PASSWORD }}
