name: pipeline

on:
  push:

concurrency:
  group: ${{ github.workflow }}-${{ github.ref }}
  cancel-in-progress: true

jobs:
  set-vars:
    runs-on: ubuntu-latest
    outputs:
      python-version: '3.9'
      main-branch: '${{ steps.branch.output.branch }}'
      environment: '${{ steps.env.outputs.env }}'
      deploy-url: '${{ steps.url.outputs.url }}'
      deploy-repo: '${{ steps.repo.outputs.repo }}'
    steps:
      - name: Set needed elements as outputs
        run: echo "setting up needed elements"

      - name: Set the main branch name
        id: branch
        run: echo "::set-output name=branch::master"

      - name: Set environment to use for deployment
        id: env
        run: |
          if [ '${{ github.ref_name }}' = '${{ steps.branch.output.branch }}' ]
          then
            echo "::set-output name=env::deployment"
          else
            echo "::set-output name=env::test-deployment"
          fi

      - name: Set deploy url
        id: url
        run: |
          if [ '${{ github.ref_name }}' = '${{ steps.branch.output.branch }}' ]
          then
            echo "::set-output name=url::https://pypi.org/project/krait/"
          else
            echo "::set-output name=url::https://test.pypi.org/project/krait/"
          fi

      - name: Set deploy repository
        id: repo
        run: |
          if [ '${{ github.ref_name }}' = '${{ steps.branch.output.branch }}' ]
          then
            echo "::set-output name=repo::pypi"
          else
            echo "::set-output name=repo::testpypi"
          fi

  test-ubuntu:
    uses: ./.github/jobs/test.yaml@${{ github.ref_name }}
    with:
      operating_system: ubuntu-latest

  test-macos:
    uses: ./.github/jobs/test.yaml@${{ github.ref_name }}
    with:
      operating_system: macos-latest

  test-windows:
    uses: ./.github/jobs/test.yaml@${{ github.ref_name }}
    with:
      operating_system: windows-latest


  version-check:
    needs:
      - test-ubuntu
      - test-macos
      - test-windows
      - set-vars
    uses: ./.github/jobs/version-check.yaml@${{ github.ref_name }}
    with:
      python-version: ${{ needs.set-vars.outputs.python-version }}

  build-container:
    needs:
      - test-ubuntu
      - set-vars
    uses: ./.github/jobs/build-docker.yaml@${{ github.ref_name }}
    with:
      python-version: ${{ needs.set-vars.outputs.python-version }}

  code-analysis:
    needs: test-ubuntu
    uses: ./.github/jobs/codeql-analysis.yml@${{ github.ref_name }}

  build-package:
    needs:
      - version-check
      - set-vars
      - code-analysis
      - build-container
    uses: ./.github/jobs/build-package.yaml@${{ github.ref_name }}
    with:
      python-version: ${{ needs.set-vars.outputs.python-version }}
      main-branch: ${{ needs.set-vars.outputs.main-branch }}

  build-changelog:
    needs:
      - version-check
      - build-container
      - set-vars
    if: needs.version-check.outputs.run-deploy == 'yes'
    uses: ./.github/jobs/build-changelog.yaml@${{ github.ref_name }}
    with:
      python-version: ${{ needs.set-vars.outputs.python-version }}

  release-github:
    needs:
      - set-vars
      - build-changelog
      - build-package
    uses: ./.github/jobs/release-github.yaml@${{ github.ref_name }}
    if: github.ref_name == needs.set-vars.outputs.main-branch

  release-pypi:
    needs:
      - set-vars
      - build-package
    uses: ./.github/jobs/release-pypi.yaml@${{ github.ref_name }}
    with:
      python-version: ${{ needs.set-vars.outputs.python-version }}
      deploy-env: ${{ needs.set-vars.outputs.environment }}
      deploy-url: "${{ needs.set-vars.outputs.deploy-url }}${{ needs.build-package.outputs.package-version }}/"
      deploy-repo: ${{ needs.set-vars.outputs.deploy-repo }}
    secrets:
      TWINE_USERNAME: ${{ secrets.TWINE_USERNAME }}
      TWINE_PASSWORD: ${{ secrets.TWINE_PASSWORD }}
